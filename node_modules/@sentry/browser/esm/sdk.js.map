{"version":3,"file":"sdk.js","sources":["../../../src/sdk.ts"],"sourcesContent":["import type { Hub } from '@sentry/core';\nimport { functionToStringIntegration, inboundFiltersIntegration } from '@sentry/core';\nimport {\n  captureSession,\n  getClient,\n  getCurrentHub,\n  getIntegrationsToSetup,\n  getReportDialogEndpoint,\n  initAndBind,\n  startSession,\n} from '@sentry/core';\nimport type { Integration, Options, UserFeedback } from '@sentry/types';\nimport {\n  addHistoryInstrumentationHandler,\n  logger,\n  stackParserFromStackParserOptions,\n  supportsFetch,\n} from '@sentry/utils';\n\nimport type { BrowserClientOptions, BrowserOptions } from './client';\nimport { BrowserClient } from './client';\nimport { DEBUG_BUILD } from './debug-build';\nimport type { ReportDialogOptions } from './helpers';\nimport { WINDOW, wrap as internalWrap } from './helpers';\nimport { breadcrumbsIntegration } from './integrations/breadcrumbs';\nimport { dedupeIntegration } from './integrations/dedupe';\nimport { globalHandlersIntegration } from './integrations/globalhandlers';\nimport { httpContextIntegration } from './integrations/httpcontext';\nimport { linkedErrorsIntegration } from './integrations/linkederrors';\nimport { browserApiErrorsIntegration } from './integrations/trycatch';\nimport { defaultStackParser } from './stack-parsers';\nimport { makeFetchTransport, makeXHRTransport } from './transports';\n\n/** @deprecated Use `getDefaultIntegrations(options)` instead. */\nexport const defaultIntegrations = [\n  inboundFiltersIntegration(),\n  functionToStringIntegration(),\n  browserApiErrorsIntegration(),\n  breadcrumbsIntegration(),\n  globalHandlersIntegration(),\n  linkedErrorsIntegration(),\n  dedupeIntegration(),\n  httpContextIntegration(),\n];\n\n/** Get the default integrations for the browser SDK. */\nexport function getDefaultIntegrations(_options: Options): Integration[] {\n  // We return a copy of the defaultIntegrations here to avoid mutating this\n  return [\n    // eslint-disable-next-line deprecation/deprecation\n    ...defaultIntegrations,\n  ];\n}\n\n/**\n * A magic string that build tooling can leverage in order to inject a release value into the SDK.\n */\ndeclare const __SENTRY_RELEASE__: string | undefined;\n\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options: BrowserOptions = {}): void {\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = getDefaultIntegrations(options);\n  }\n  if (options.release === undefined) {\n    // This allows build tooling to find-and-replace __SENTRY_RELEASE__ to inject a release value\n    if (typeof __SENTRY_RELEASE__ === 'string') {\n      options.release = __SENTRY_RELEASE__;\n    }\n\n    // This supports the variable that sentry-webpack-plugin injects\n    if (WINDOW.SENTRY_RELEASE && WINDOW.SENTRY_RELEASE.id) {\n      options.release = WINDOW.SENTRY_RELEASE.id;\n    }\n  }\n  if (options.autoSessionTracking === undefined) {\n    options.autoSessionTracking = true;\n  }\n  if (options.sendClientReports === undefined) {\n    options.sendClientReports = true;\n  }\n\n  const clientOptions: BrowserClientOptions = {\n    ...options,\n    stackParser: stackParserFromStackParserOptions(options.stackParser || defaultStackParser),\n    integrations: getIntegrationsToSetup(options),\n    transport: options.transport || (supportsFetch() ? makeFetchTransport : makeXHRTransport),\n  };\n\n  initAndBind(BrowserClient, clientOptions);\n\n  if (options.autoSessionTracking) {\n    startSessionTracking();\n  }\n}\n\ntype NewReportDialogOptions = ReportDialogOptions & { eventId: string }; // eslint-disable-line\n\ninterface ShowReportDialogFunction {\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   */\n  (options: NewReportDialogOptions): void;\n\n  /**\n   * Present the user with a report dialog.\n   *\n   * @param options Everything is optional, we try to fetch all info need from the global scope.\n   *\n   * @deprecated Please always pass an `options` argument with `eventId`. The `hub` argument will not be used in the next version of the SDK.\n   */\n  // eslint-disable-next-line deprecation/deprecation\n  (options?: ReportDialogOptions, hub?: Hub): void;\n}\n\nexport const showReportDialog: ShowReportDialogFunction = (\n  // eslint-disable-next-line deprecation/deprecation\n  options: ReportDialogOptions = {},\n  // eslint-disable-next-line deprecation/deprecation\n  hub: Hub = getCurrentHub(),\n) => {\n  // doesn't work without a document (React Native)\n  if (!WINDOW.document) {\n    DEBUG_BUILD && logger.error('Global document not defined in showReportDialog call');\n    return;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  const { client, scope } = hub.getStackTop();\n  const dsn = options.dsn || (client && client.getDsn());\n  if (!dsn) {\n    DEBUG_BUILD && logger.error('DSN not configured for showReportDialog call');\n    return;\n  }\n\n  if (scope) {\n    options.user = {\n      ...scope.getUser(),\n      ...options.user,\n    };\n  }\n\n  // TODO(v8): Remove this entire if statement. `eventId` will be a required option.\n  // eslint-disable-next-line deprecation/deprecation\n  if (!options.eventId) {\n    // eslint-disable-next-line deprecation/deprecation\n    options.eventId = hub.lastEventId();\n  }\n\n  const script = WINDOW.document.createElement('script');\n  script.async = true;\n  script.crossOrigin = 'anonymous';\n  script.src = getReportDialogEndpoint(dsn, options);\n\n  if (options.onLoad) {\n    script.onload = options.onLoad;\n  }\n\n  const { onClose } = options;\n  if (onClose) {\n    const reportDialogClosedMessageHandler = (event: MessageEvent): void => {\n      if (event.data === '__sentry_reportdialog_closed__') {\n        try {\n          onClose();\n        } finally {\n          WINDOW.removeEventListener('message', reportDialogClosedMessageHandler);\n        }\n      }\n    };\n    WINDOW.addEventListener('message', reportDialogClosedMessageHandler);\n  }\n\n  const injectionPoint = WINDOW.document.head || WINDOW.document.body;\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  } else {\n    DEBUG_BUILD && logger.error('Not injecting report dialog. No injection point found in HTML');\n  }\n};\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad(): void {\n  // Noop\n}\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback: () => void): void {\n  callback();\n}\n\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @deprecated This function will be removed in v8.\n * It is not part of Sentry's official API and it's easily replaceable by using a try/catch block\n * and calling Sentry.captureException.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n// TODO(v8): Remove this function\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrap(fn: (...args: any) => any): any {\n  return internalWrap(fn)();\n}\n\n/**\n * Enable automatic Session Tracking for the initial page load.\n */\nfunction startSessionTracking(): void {\n  if (typeof WINDOW.document === 'undefined') {\n    DEBUG_BUILD && logger.warn('Session tracking in non-browser environment with @sentry/browser is not supported.');\n    return;\n  }\n\n  // The session duration for browser sessions does not track a meaningful\n  // concept that can be used as a metric.\n  // Automatically captured sessions are akin to page views, and thus we\n  // discard their duration.\n  startSession({ ignoreDuration: true });\n  captureSession();\n\n  // We want to create a session for every navigation as well\n  addHistoryInstrumentationHandler(({ from, to }) => {\n    // Don't create an additional session for the initial route or if the location did not change\n    if (from !== undefined && from !== to) {\n      startSession({ ignoreDuration: true });\n      captureSession();\n    }\n  });\n}\n\n/**\n * Captures user feedback and sends it to Sentry.\n */\nexport function captureUserFeedback(feedback: UserFeedback): void {\n  const client = getClient<BrowserClient>();\n  if (client) {\n    client.captureUserFeedback(feedback);\n  }\n}\n"],"names":["internalWrap"],"mappings":"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"}